# ================================
# REPAIRCOIN BACKEND CONFIGURATION
# ================================

# ================================
# ESSENTIAL VARIABLES - FILL THESE FIRST
# ================================

# Server Configuration
NODE_ENV=development
PORT=3000
JWT_SECRET=repaircoin-jwt-secret-key-minimum-32-characters-long-for-security
USE_ENHANCED_DOMAINS=false  # Start with false
ENABLE_SWAGGER=true         # Enable this first
ENABLE_METRICS=true         # Enable this second

# PostgreSQL Database Configuration
DATABASE_URL=postgresql://repaircoin_user:repaircoin_password@postgres:5432/repaircoin
DB_HOST=postgres
DB_PORT=5432
DB_NAME=repaircoin
DB_USER=repaircoin_user
DB_PASSWORD=repaircoin_password

# RCN Token Configuration (Utility Token - RepairCoin)
RCN_CONTRACT_ADDRESS=0xBFE793d78B6B83859b528F191bd6F2b8555D951C
RCN_THIRDWEB_CLIENT_ID=your_rcn_client_id_from_thirdweb_dashboard
RCN_THIRDWEB_SECRET_KEY=your_rcn_secret_key_from_thirdweb_dashboard

# RCG Token Configuration (Governance Token - RepairCoin Governance) 
# Note: RCG features not yet implemented, for future use
RCG_CONTRACT_ADDRESS=0x973D8b27E7CD72270F9C07d94381f522bC9D4304
RCG_THIRDWEB_CLIENT_ID=your_rcg_client_id_from_thirdweb_dashboard
RCG_THIRDWEB_SECRET_KEY=your_rcg_secret_key_from_thirdweb_dashboard

# Legacy Configuration (for backward compatibility)
THIRDWEB_CLIENT_ID=your_actual_client_id_from_thirdweb_dashboard
THIRDWEB_SECRET_KEY=your_actual_secret_key_from_thirdweb_dashboard
REPAIRCOIN_CONTRACT_ADDRESS=0xBFE793d78B6B83859b528F191bd6F2b8555D951C
PRIVATE_KEY=your_wallet_private_key_without_0x_prefix
NETWORK=base-sepolia

# Admin Configuration (your wallet address)
# Multiple addresses and names can be comma-separated
# Example for multiple admins:
# ADMIN_ADDRESSES=0x123...,0x456...,0x789...
# ADMIN_NAME=John Doe,Jane Smith,Bob Johnson
ADMIN_ADDRESSES=0x761E5E59485ec6feb263320f5d636042bD9EBc8c
ADMIN_NAME=System Administrator

# ================================
# RATE LIMITING & SECURITY
# ================================

# Rate Limiting (requests per window)
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100
RATE_LIMIT_SKIP_SUCCESSFUL_REQUESTS=false

# API Security
CORS_ORIGIN=http://localhost:3001,http://localhost:3000
HELMET_ENABLED=true
TRUST_PROXY=false

# ================================
# PAGINATION DEFAULTS
# ================================

# Default pagination settings
DEFAULT_PAGE_SIZE=20
MAX_PAGE_SIZE=100
DEFAULT_ORDER_BY=created_at
DEFAULT_ORDER_DIRECTION=desc

# ================================
# WEBHOOK & INTEGRATION SETTINGS
# ================================

# FixFlow Integration (when ready)
FIXFLOW_WEBHOOK_SECRET=placeholder-will-be-provided-by-fixflow
FIXFLOW_URL=https://app.fixflow.com
FIXFLOW_API_KEY=your-fixflow-api-key-when-available

# Stripe Payment Integration
# Get your keys from: https://dashboard.stripe.com/test/apikeys
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_endpoint_secret_here
STRIPE_MONTHLY_PRICE_ID=price_your_monthly_subscription_price_id
# Optional: Set to 'test' for test mode indicators in UI
STRIPE_MODE=test

# Frontend URL (for CORS and redirects)
FRONTEND_URL=http://localhost:3001

# ================================
# LOGGING & MONITORING
# ================================

# Logging Configuration
LOG_LEVEL=debug
LOG_FORMAT=combined
LOG_TO_FILE=true
LOG_FILE_PATH=./logs/repaircoin.log

# Health Check Settings
HEALTH_CHECK_INTERVAL=30000
DATABASE_TIMEOUT=5000

# ================================
# DEVELOPMENT SETTINGS
# ================================

# Development Features
ENABLE_API_DOCS=true
ENABLE_QUERY_LOGGING=true
MOCK_BLOCKCHAIN_CALLS=false
ENABLE_SAMPLE_DATA=true

# Hot Reload (for Docker development)
CHOKIDAR_USEPOLLING=true
WATCHPACK_POLLING=true

# ================================
# PRODUCTION OVERRIDES
# ================================
# These will be different in production

# NODE_ENV=production
# PORT=8080
# LOG_LEVEL=info
# ENABLE_API_DOCS=false
# ENABLE_QUERY_LOGGING=false
# TRUST_PROXY=true
# CORS_ORIGIN=https://yourdomain.com

# Production Database (when deploying)
# DATABASE_URL=postgresql://username:password@your-production-db:5432/repaircoin
# DB_HOST=your-production-db-host
# DB_PASSWORD=your-secure-production-password

# Production Security
# JWT_SECRET=your-super-secure-random-jwt-secret-for-production-at-least-64-characters
# RATE_LIMIT_MAX_REQUESTS=50

# ================================
# OPTIONAL FEATURES (FUTURE)
# ================================

# Email Configuration (when needed)
# SMTP_HOST=smtp.gmail.com
# SMTP_PORT=587
# SMTP_USER=your-email@gmail.com
# SMTP_PASS=your-app-password
# FROM_EMAIL=noreply@repaircoin.com

# Redis Cache (for scaling)
# REDIS_URL=redis://localhost:6379
# REDIS_PASSWORD=your-redis-password
# CACHE_TTL=3600

# File Storage (for receipts/photos)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# S3_BUCKET=repaircoin-uploads

# Analytics & Monitoring
# ANALYTICS_API_KEY=your-analytics-key
# SENTRY_DSN=your-sentry-dsn-for-error-tracking
# NEW_RELIC_LICENSE_KEY=your-newrelic-key

# ================================
# QUICK SETUP GUIDE
# ================================
# 1. Copy this file to .env
# 2. Fill in your Thirdweb credentials (CLIENT_ID and SECRET_KEY)
# 3. Add your wallet PRIVATE_KEY (without 0x prefix)
# 4. Update ADMIN_ADDRESSES with your wallet address
# 5. Generate a secure JWT_SECRET (32+ characters)
# 6. (Optional) Configure Stripe for subscription payments:
#    a. Get test keys from https://dashboard.stripe.com/test/apikeys
#    b. Set up webhook endpoint for http://localhost:3000/api/shops/webhooks/stripe
#    c. Copy the webhook signing secret to STRIPE_WEBHOOK_SECRET
# 7. Run: docker-compose up -d
# 8. Test: curl http://localhost:3000/health
#
# For production deployment:
# - Change NODE_ENV to production
# - Use secure, random passwords
# - Set up proper CORS origins
# - Enable HTTPS and set TRUST_PROXY=true
# - Use environment-specific database credentials